package robot.test;

import robot.base.LCDInfo;
import robot.base.DemoController.FunctionType;
import robot.bluetooth.PlayerRole;
import robot.mapping.Map;
import robot.navigation.*;
import lejos.nxt.LCD;
import lejos.nxt.Motor;
import lejos.nxt.NXTRegulatedMotor;

/**
 * Test class.
 * Uses mocked classes for the purpose of testing navigation.
 * 
 * @author Andreas
 * @version 1.1.0
 * @since 2013-11-09
 */
public class EndNavigationTest extends Thread{	
	
	private NXTRegulatedMotor leftMotor = Motor.A;
	private NXTRegulatedMotor rightMotor = Motor.B;
	
	private TwoWheeledRobot robo;
	Navigation2 nav;
	
	 // This controls which points the navigation travels to
	int[] endZone = new int[]{120,90,150,120};
	int wpIndex = 0;
	
	public static void main(String[] args) {
		new NavigationTest();
	}
	public EndNavigationTest(){
		new Map(PlayerRole.BUILDER, new int[]{0,0,0,0}, endZone);
		Map.addBlock(new double[]{60,60,60,60}, new double[]{60,60,60,60});
		
		robo = new TwoWheeledRobot(leftMotor, rightMotor);
		new Odometer(robo, null);
		nav = new Navigation2(robo);
		
		//new LCDInfo();
		
		this.start();
	}
	// Runs all the control code (calling localization, navigation, identification, etc)
	public void run(){
		navigateToEnd();
	}
	// Handles the navigation to the end
	private void navigateToEnd() {		
		LCD.drawString("go home", 0, 0);
		Map.buildEndWaypoints();
		
		double[] wp = new double[2];
		Map.getWaypoint(wp);
		
		
		
		while(Map.hasNewWaypoint()){
			LCD.drawString((int)wp[0] + "|" + (int)wp[1], 0, 2);
			
			nav.travelTo(wp[0], wp[1]);
			
			while (!nav.isDone()) {
				try { Thread.sleep(400); } 
				catch (InterruptedException e) { }
			}
			
			nav.stop();
			Map.waypointReached();
		}
	}
}

