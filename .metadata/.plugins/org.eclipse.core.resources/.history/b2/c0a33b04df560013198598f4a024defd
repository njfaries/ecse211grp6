package robot.base;

import robot.bluetooth.*;
import robot.collection.*;
import robot.localization.Localization;
import robot.mapping.*;
import robot.navigation.*;
import robot.sensors.*;

import lejos.nxt.Button;
import lejos.nxt.LCD;
import lejos.nxt.Motor;
import lejos.nxt.MotorPort;
import lejos.nxt.NXTRegulatedMotor;
import lejos.nxt.ColorSensor;
import lejos.nxt.SensorPort;
import lejos.nxt.UltrasonicSensor;

/**
 * Contains the main method for the robot. Initiates classes and passes them the
 * necessary motors, sensors, and various constants. Controls and and delegates
 * tasks to various subroutines.
 * 
 * @author Andreas, Nathaniel
 * @version 1.2.0
 * @since 2013-11-04
 */
public class BluetoothTest extends Thread {
	public enum FunctionType {
		IDLE, LOCALIZE, SEARCH, IDENTIFY, BLOCK_NAVIGATE, OPEN_NAVIGATE, COLLECT, END_NAVIGATE, RELEASE, RETURN
	};

	public enum RobotMode {
		STACKER, GARBAGE
	};

	private static double OPEN_DIST = 40;
	
	private static NXTRegulatedMotor leftMotor = new NXTRegulatedMotor(MotorPort.A);
	private static NXTRegulatedMotor rightMotor = new NXTRegulatedMotor(MotorPort.B);
	private static NXTRegulatedMotor cageMotor = new NXTRegulatedMotor(MotorPort.C);

	private static UltrasonicSensor usFront = new UltrasonicSensor(SensorPort.S4);
	private static UltrasonicSensor usTop = new UltrasonicSensor(SensorPort.S3);
	
	private static ColorSensor csLeft = new ColorSensor(SensorPort.S1);
	private static ColorSensor csRight = new ColorSensor(SensorPort.S2);

	private CollectionSystem collection;
	private Navigation2 nav;
	private TwoWheeledRobot robo;

	private USGather us;
	private ColorGather cg;

	private Localization loc;
	private Scanner sc;
	
	StartCorner corner = StartCorner.BOTTOM_LEFT;
	PlayerRole role = PlayerRole.BUILDER;
	int[] greenZone = new int[] {60,90,90,120};
	int[] redZone = new int[4];

	private int blocksCollected = 0;
	private int maxBlocks = 2;
	private double searchFrom = 0, searchTo = 90;
	
	private FunctionType function = FunctionType.SEARCH;

	private double[] pos = new double[3];

	public static void main(String[] args) {
		new BluetoothTest();
	}

	/**
	 * The robot controller delegates the starting and ending of various
	 * subtasks like localization, searching and collection.
	 */
	public BluetoothTest() {
		receive();
	}

	// Runs all the control code (calling localization, navigation,
	// identification, etc)
	public void run() {
		boolean running = true;
		double[] endCenter = Map2.getEndCenter();
		
		while (running) {
			if(role == PlayerRole.BUILDER)
				LCD.drawString("builder", 0, 0);
			LCD.drawString()
			try { Thread.sleep(50); } catch (InterruptedException e) { }
		}
	}

	// Receives instruction via bluetooth
	private void receive() {
		BluetoothConnection conn = new BluetoothConnection();
		// as of this point the bluetooth connection is closed again, and you can pair to another NXT (or PC) if you wish
		
		Transmission t = conn.getTransmission();
		if (t == null) {
			LCD.drawString("Failed to read transmission", 0, 5);
		} else {
			corner = t.startingCorner;
			role = t.role;
			// green zone is defined by these (bottom-left and top-right) corners:
			greenZone = t.greenZone;
			
			// red zone is defined by these (bottom-left and top-right) corners:
			redZone = t.redZone;
		}
		// stall until user decides to end program
		Button.waitForAnyPress();
	}
}
